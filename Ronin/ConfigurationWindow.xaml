<controls:MetroWindow x:Class="Ronin.ConfigurationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Ronin"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:utilities="clr-namespace:Ronin.Utilities"
        xmlns:src="clr-namespace:Ronin.Data.Constants"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        TitleCharacterCasing="Normal"
                      ResizeMode="NoResize"
        controls:ButtonHelper.PreserveTextCase="True"
        Title="Configuration Window" Height="600" Width="820" Closed="MetroWindow_Closed" MouseLeftButtonDown="MetroWindow_MouseLeftButtonDown">
    <Window.Resources>
        <utilities:BoolToBrushConverter x:Key="brushConverter" />
        <utilities:BoolToStringConverter x:Key="stringConverter" />
        <utilities:InverseBoolConverter x:Key="inverseBoolConverter" />
        <utilities:RadioBoolToIntConverter x:Key="radioButtonToEnumConverter" />
    </Window.Resources>
    <Grid>
        <ComboBox x:Name="configurationCb"  Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" ItemsSource="{Binding AvailableConfigurations}" 
                  Text="{Binding SelectedBot.SelectedConfiguration, Mode=OneWay,FallbackValue=- }" Width="128" SelectionChanged="ComboBox_SelectionChanged" DropDownOpened="ComboBox_DropDownOpened" />

        <Button HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,35,0,0" Width="50" Height="25" MinHeight="25" Padding="0" FontSize="14" Click="SaveConfig_Click">Save</Button>
        <Button HorizontalAlignment="Left" VerticalAlignment="Top"  Width="70" Height="25" MinHeight="25" Foreground="White" FontSize="14" Padding="0" Margin="68,35,0,0"
            Content="{Binding SelectedBot.Engine.Running, Converter={StaticResource stringConverter}, FallbackValue=Start}" Background="{Binding SelectedBot.Engine.Running, Converter={StaticResource brushConverter}, FallbackValue=DarkGreen}" Click="StartButton_Click" />
        
        
        <TabControl >
            <TabControl.Resources>
                <Style TargetType="{x:Type TabPanel}">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                </Style>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Grid Name="Panel">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,20"
                                                                      />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Panel" Property="Background" Value="GreenYellow" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Panel" Property="Background" Value="White" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="Panel" Property="Background" Value="LightGray" />
                                    </Trigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="Skills" FontWeight="Bold">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border BorderThickness="1" BorderBrush="Gray" Margin="3">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" TextAlignment="Center" Text="State" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" TextAlignment="Center" Text="Name" FontWeight="Bold" />
                                <TextBlock Grid.Column="2" TextAlignment="Center" Text="Settings" FontWeight="Bold" />
                            </Grid>
                            <ListBox Name="NukeRulesListBox" ItemsSource="{Binding SelectedBot.Engine.NukeHandler.NukesToUse}"  AllowDrop="True" SelectionMode="Single" 
                                             SelectedItem="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke, Mode=TwoWay}" SelectionChanged="NukeRulesListBox_SelectionChanged" PreviewMouseMove="NukeRulesListBox_PreviewMouseMove" >
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50"></ColumnDefinition>
                                                <ColumnDefinition Width="200"></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox HorizontalAlignment="Center" Grid.Column="0" IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></CheckBox>
                                            <TextBlock HorizontalAlignment="Center" Grid.Column="1" Text="{Binding NukeName}"></TextBlock>
                                            <TextBlock HorizontalAlignment="Center" Grid.Column="2" Text="{Binding NukeConditionsString}"></TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </Border>
                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="1" Margin="3">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" >Self HP/MP/CP</TextBlock>
                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                <TextBlock Text="My HP >" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBox Margin="5,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.HealthPercentOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBlock Text="My HP  &lt;" FontSize="16" FontWeight="Normal" VerticalAlignment="Center" Margin="15,0,0,0"/>
                                <TextBox Margin="7,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.HealthPercentBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Row="2" Orientation="Horizontal">
                                <TextBlock Text="My MP >" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBox Margin="2,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.ManaPercentOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBlock Text="My MP &lt;" FontSize="16" FontWeight="Normal" VerticalAlignment="Center" Margin="15,0,0,0"/>
                                <TextBox Margin="8,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.ManaPercentBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Row="3" Orientation="Horizontal">
                                <TextBlock Text="My CP  >" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBox Margin="2,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.CombatPointsPercentOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBlock Text="My CP  &lt;" FontSize="16" FontWeight="Normal" VerticalAlignment="Center" Margin="16,0,0,0"/>
                                <TextBox Margin="7,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.CombatPointsPercentBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Row="4"  VerticalAlignment="Center"  Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,0,0,0">
                                <TextBlock VerticalAlignment="Center" FontSize="15" FontWeight="Normal" >Target is dead</TextBlock>
                                <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.TargetIsDead, Mode=TwoWay}" IsEnabled="True" Margin="27,0,0,0"/>
                            </StackPanel>
                            <StackPanel Grid.Row="5"  VerticalAlignment="Center"  Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock VerticalAlignment="Center" FontSize="15" FontWeight="Normal" Margin="5,0,0,0">Target is spoiled</TextBlock>
                                <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.TargetIsSpoiled, Mode=TwoWay}" IsEnabled="True" Margin="13,0,0,0"/>
                            </StackPanel>
                            <Button Grid.Row="6" FontSize="16" Click="OpenAdditionalNukeConditions_ButtonClick">Additional Conditions</Button>
                        </Grid>
                    </Border>
                    <Grid Grid.ColumnSpan="2" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border BorderThickness="1" BorderBrush="Gray"  Grid.Column="0">
                            <Grid Margin="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.ColumnSpan="2" Margin="7,0,0,0">
                                    <StackPanel Orientation="Horizontal" Margin="5"  VerticalAlignment="Top">
                                        <TextBlock VerticalAlignment="Center">Type</TextBlock>
                                        <ComboBox Margin="5,0,0,0"  VerticalAlignment="Center" SelectedIndex="{Binding SelectedBot.Engine.NukeHandler.NukeTypeToAdd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="85" >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <DockPanel>
                                                        <TextBlock Text="{Binding SkillName}" HorizontalAlignment="Center"></TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                            <ComboBoxItem>Skill</ComboBoxItem>
                                            <ComboBoxItem>Item</ComboBoxItem>
                                            <ComboBoxItem>Pet Skill</ComboBoxItem>
                                        </ComboBox>
                                        <TextBlock Margin="20,0,0,0"  VerticalAlignment="Center">Name</TextBlock>
                                        <ComboBox Name="skillsBox" SelectedValuePath="SkillName" DisplayMemberPath="SkillName" IsEditable="False" IsTextSearchEnabled="True" 
                                                  SelectionChanged="SkillsBox_OnSelectionChanged" Margin="5,0,0,0" Text="Type" VerticalAlignment="Center" Width="180" 
                                                  ItemsSource="{Binding SelectedBot.Engine.NukeHandler.NukesToAdd}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                                        <TextBlock Margin="0,3,10,0">Repeat Until Success</TextBlock>
                                        <CheckBox IsChecked="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.RepeatUntilSuccess, Mode=TwoWay}"/>
                                        <TextBlock Margin="90,3,10,0">Interval</TextBlock>
                                        <TextBox Width="40" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                                 Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.Interval, FallbackValue=0.50, Mode=TwoWay,StringFormat='{}{0:F2}'}"/>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock HorizontalAlignment="Left" FontSize="14" >Range</TextBlock>

                                        <CheckBox Grid.Column="1" HorizontalAlignment="Right" IsChecked="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.UseDefaultRange}" Margin="0,3,20,0">Default</CheckBox>
                                    </Grid>
                                    <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                                        <TextBlock Margin="0,5,0,0">Min</TextBlock>
                                        <TextBox TextAlignment="Center" Width="30" Margin="5,0,20,5" KeyDown="CommitChanges_OnKeyDown" Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.MinDistance, FallbackValue=0, Mode=TwoWay}"
                                                 IsEnabled="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.UseDefaultRange, Converter={StaticResource inverseBoolConverter}}" FontStyle="Normal" TextChanged="OnlyDigitsValidationTB_TextChanged"/>
                                        <TextBlock Margin="0,5,0,0">Max</TextBlock>
                                        <TextBox TextAlignment="Center" Width="40" Margin="5,0,10,5" KeyDown="CommitChanges_OnKeyDown" Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.MaxDistance, FallbackValue=900, Mode=TwoWay}"
                                                 IsEnabled="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.UseDefaultRange, Converter={StaticResource inverseBoolConverter}}" FontStyle="Normal" TextChanged="OnlyDigitsValidationTB_TextChanged"/>
                                    </StackPanel>
                                </StackPanel>
                                <Grid Grid.Row="1" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Button FontSize="14" Click="AddNuke_ButtonClick">Add</Button>
                                        <Button Margin="30,0,0,0" FontSize="14" Click="DeleteNuke_ButtonClick">Delete</Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="1" BorderBrush="Gray" Margin="3,0,3,0" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" FontWeight="Bold" >Monster Filter</TextBlock>
                                    <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="5,10,0,0">
                                        <RadioButton GroupName="SkillTargetFilter"  Content="Use only for" IsChecked="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.MonsterFilterType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:FilterType.Inclusive}, FallbackValue=True}" FontSize="14" FontWeight="Normal" />
                                        <RadioButton GroupName="SkillTargetFilter" Content="Use for all except" IsChecked="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.MonsterFilterType, ConverterParameter={x:Static src:FilterType.Exclusive}, Converter={StaticResource radioButtonToEnumConverter}}" Margin="0,5" FontSize="14" FontWeight="Normal"/>
                                    </StackPanel>
                                    <Border BorderThickness="2" BorderBrush="Black" Grid.Row="2" Width="170" Height="30" VerticalAlignment="Center">
                                        <TextBox Width="170" Height="30" FontWeight="Normal" MouseDoubleClick="OpenMonsterFilter_txtBoxMouseDoubleClick" FontSize="12" Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.MonsterFilterStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </Border>
                                </Grid>
                            </Border>
                            <Border BorderThickness="1" BorderBrush="Gray" Grid.Column="1" Margin="3,0,3,0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                        <TextBlock FontSize="14" FontWeight="Bold" >AoE Settings</TextBlock>
                                        <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.AoeActivated, Mode=TwoWay}"></CheckBox>
                                    </StackPanel>
                                    <StackPanel Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,3,10,0">
                                        <TextBlock>Range</TextBlock>
                                        <TextBox MinHeight="10" Height="20" FontSize="11" MaxWidth="40" TextAlignment="Center"  KeyDown="CommitChanges_OnKeyDown" Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.AoeRange, Mode=TwoWay}"
                                                 TextChanged="OnlyDigitsValidationTB_TextChanged"></TextBox>
                                    </StackPanel>
                                    <StackPanel Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Center" Margin="0,25,30,0" HorizontalAlignment="Center">
                                        <TextBlock FontSize="14" Margin="5">Monsters around:</TextBlock>
                                        <StackPanel Orientation="Horizontal">
                                            <RadioButton GroupName="SkillAoETargetType" Content="Self" IsChecked="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.AoeMonstersAroundType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:TargetType.Self}, FallbackValue=True}" FontSize="14" FontWeight="Normal" />
                                        </StackPanel>
                                        <RadioButton GroupName="SkillAoETargetType" Content="Target" IsChecked="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.AoeMonstersAroundType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:TargetType.Target}}" Margin="0,5" FontSize="14" FontWeight="Normal"/>
                                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                            <ComboBox MinHeight="20" Height="15" Width="70" SelectedIndex="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.AoeCountComparisonType, Mode=TwoWay}">
                                                <ComboBoxItem>Less</ComboBoxItem>
                                                <ComboBoxItem>More</ComboBoxItem>
                                            </ComboBox>
                                            <TextBlock FontWeight="Normal" Margin="3,3,0,0">than</TextBlock>
                                            <TextBox MinHeight="20" Height="15" Margin="5,0,0,0" Width="20" Text="{Binding SelectedBot.Engine.NukeHandler.SelectedNuke.AoeMonsterCount, Mode=TwoWay}" KeyDown="CommitChanges_OnKeyDown" FontSize="11"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            
            <TabItem Header="Self Heal/Buff"  FontWeight="Bold">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border BorderThickness="1" BorderBrush="Gray" Margin="3">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" TextAlignment="Center" Text="State" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" TextAlignment="Center" Text="Name" FontWeight="Bold" />
                                <TextBlock Grid.Column="2" TextAlignment="Center" Text="Settings" FontWeight="Bold" />
                            </Grid>
                            <ListBox Name="SelfHealRulesListBox" ItemsSource="{Binding SelectedBot.Engine.SelfHealBuffHandler.NukesToUse}"  AllowDrop="True" SelectionMode="Single" 
                                             SelectedItem="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule, Mode=TwoWay}" SelectionChanged="SelfHealBuffRulesListBox_SelectionChanged">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50"></ColumnDefinition>
                                                <ColumnDefinition Width="200"></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox HorizontalAlignment="Center" Grid.Column="0" IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></CheckBox>
                                            <TextBlock HorizontalAlignment="Center" Grid.Column="1" Text="{Binding SelfHealBuffName}"></TextBlock>
                                            <TextBlock HorizontalAlignment="Center" Grid.Column="2" Text="{Binding ConditionsString}"></TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </Border>
                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="1" Margin="3">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" >Self HP/MP/CP</TextBlock>
                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                <TextBlock Text="My HP >" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBox Margin="5,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.HealthPercentOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBlock Text="My HP  &lt;" FontSize="16" FontWeight="Normal" VerticalAlignment="Center" Margin="15,0,0,0"/>
                                <TextBox Margin="7,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.HealthPercentBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Row="2" Orientation="Horizontal">
                                <TextBlock Text="My MP >" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBox Margin="2,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.ManaPercentOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBlock Text="My MP &lt;" FontSize="16" FontWeight="Normal" VerticalAlignment="Center" Margin="15,0,0,0"/>
                                <TextBox Margin="8,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.ManaPercentBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Row="3" Orientation="Horizontal">
                                <TextBlock Text="My CP  >" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBox Margin="2,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.CombatPointsPercentOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBlock Text="My CP  &lt;" FontSize="16" FontWeight="Normal" VerticalAlignment="Center" Margin="16,0,0,0"/>
                                <TextBox Margin="7,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.CombatPointsPercentBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Row="4"  VerticalAlignment="Center"  Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,0,0,0">
                                <TextBlock VerticalAlignment="Center" FontSize="15" FontWeight="Normal" >Pet/Summon is dead</TextBlock>
                                <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.PetIsDead, Mode=TwoWay}" IsEnabled="True" Margin="27,0,0,0"/>
                            </StackPanel>
                            <StackPanel Grid.Row="5"  VerticalAlignment="Center"  Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock VerticalAlignment="Center" FontSize="15" FontWeight="Normal" Margin="5,0,0,0">Use on Pet/Summon</TextBlock>
                                <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.UseOnPet, Mode=TwoWay}" IsEnabled="True" Margin="13,0,0,0"/>
                            </StackPanel>
                            <Button Grid.Row="6" FontSize="16" Click="OpenAdditionalSelfConditions_ButtonClick">Additional Conditions</Button>
                        </Grid>
                    </Border>
                    <Grid Grid.ColumnSpan="2" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border BorderThickness="1" BorderBrush="Gray"  Grid.Column="0" Grid.ColumnSpan="3">
                            <Grid Margin="20,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.ColumnSpan="2" Margin="7,0,0,0">
                                    <StackPanel Orientation="Horizontal" Margin="5"  VerticalAlignment="Top">
                                        <TextBlock VerticalAlignment="Center">Type</TextBlock>
                                        <ComboBox Margin="5,0,0,0"  VerticalAlignment="Center" SelectedIndex="{Binding SelectedBot.Engine.SelfHealBuffHandler.NukeTypeToAdd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="85" >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <DockPanel>
                                                        <TextBlock Text="{Binding SkillName}" HorizontalAlignment="Center"></TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                            <ComboBoxItem>Skill</ComboBoxItem>
                                            <ComboBoxItem>Item</ComboBoxItem>
                                            <ComboBoxItem>Pet Skill</ComboBoxItem>
                                        </ComboBox>
                                        <TextBlock Margin="20,0,0,0"  VerticalAlignment="Center">Name</TextBlock>
                                        <ComboBox Name="selfHealBuffBox" SelectedValuePath="SkillName" DisplayMemberPath="SkillName"  SelectionChanged="SelfHealBuffBox_OnSelectionChanged" 
                                                  IsTextSearchEnabled="True" Margin="5,0,0,0" Text="Type" VerticalAlignment="Center" Width="180" 
                                                  ItemsSource="{Binding SelectedBot.Engine.SelfHealBuffHandler.NukesToAdd}"/>
                                    </StackPanel>
                                    <StackPanel VerticalAlignment="Bottom">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontWeight="Normal" FontSize="14" VerticalAlignment="Center">Use if missing (de)buff</TextBlock>
                                            <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.UseIfBuffIsMissing}"/>
                                            <TextBlock FontWeight="Normal" FontSize="14" VerticalAlignment="Center" Margin="40,0,0,0">Use if having (de)buff</TextBlock>
                                            <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.UseIfBuffIsPresent}"/>
                                        </StackPanel>
                                        <Border Margin="0,5,0,0" BorderThickness="2" BorderBrush="Black"  Width="360" Height="22" VerticalAlignment="Center" HorizontalAlignment="Left">
                                            <TextBox Width="360" Height="30" FontWeight="Normal" MouseDoubleClick="OpenBuffSelection_txtBoxMouseDoubleClick" FontSize="12" TextAlignment="Center"
                                                     Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.SelectedBuffsStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </Border>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                                            <CheckBox IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.TimerCheckActivated, Mode=TwoWay}"></CheckBox>
                                            <TextBlock HorizontalAlignment="Left" FontSize="14" FontWeight="Normal" >and/or time left is</TextBlock>
                                            <ComboBox MinHeight="20" Height="15" Width="62" SelectedIndex="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.TimerComparisonType, Mode=TwoWay}"  FontSize="12" Margin="10,0,0,0">
                                                <ComboBoxItem>Less</ComboBoxItem>
                                                <ComboBoxItem>More</ComboBoxItem>
                                            </ComboBox>
                                            <TextBlock FontWeight="Normal" Margin="3,3,0,0" FontSize="14">than</TextBlock>
                                            <TextBox MinHeight="20" Height="15" Margin="5,0,0,0" Width="20" Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.TimerSeconds, Mode=TwoWay}" 
                                                     TextChanged="OnlyDigitsValidationTB_TextChanged" KeyDown="CommitChanges_OnKeyDown" FontSize="10"/>
                                            <TextBlock FontWeight="Normal" Margin="3,3,0,0" FontSize="14">seconds.</TextBlock>
                                        </StackPanel>
                                    </Grid>
                                    <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Margin="0,10,0,0">
                                        <CheckBox  IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.SkillLevelComparisonActivated, Mode=TwoWay}"></CheckBox>
                                        <TextBlock HorizontalAlignment="Left" FontSize="14" FontWeight="Normal" >and/or skill level is</TextBlock>
                                        <ComboBox MinHeight="20" Height="15" Width="62" SelectedIndex="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.SkillLevelComparisonType, Mode=TwoWay}" FontSize="12" Margin="5,0,0,0">
                                            <ComboBoxItem>Less</ComboBoxItem>
                                            <ComboBoxItem>More</ComboBoxItem>
                                            <ComboBoxItem>Equal</ComboBoxItem>
                                        </ComboBox>
                                        <TextBlock FontWeight="Normal" Margin="3,3,0,0" FontSize="14">than/to</TextBlock>
                                        <TextBox MinHeight="20" Height="15" Margin="5,0,0,0" Width="20" Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.SkillLevelRequired, Mode=TwoWay}" 
                                                     TextChanged="OnlyDigitsValidationTB_TextChanged" KeyDown="CommitChanges_OnKeyDown" FontSize="10"/>
                                        <TextBlock FontWeight="Normal" Margin="3,3,0,0" FontSize="14">.</TextBlock>
                                    </StackPanel>
                                </StackPanel>
                                <Grid Grid.Row="1" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    
                                </Grid>
                            </Grid>
                        </Border>
                        <Border BorderThickness="0" BorderBrush="Gray" Margin="3,0,3,0" Grid.Column="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                   
                                    <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="15">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock FontWeight="Bold" Margin="0,5,10,0">Interval</TextBlock>
                                        <TextBox Width="50" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                                 Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.Interval, FallbackValue=0.50, Mode=TwoWay,StringFormat='{}{0:F2}'}"/>
                                        <TextBlock Margin="0,5,10,0">s</TextBlock>
                                    </StackPanel>
                                    <StackPanel VerticalAlignment="Center"  Orientation="Horizontal" Margin="0,15,0,15">
                                        <TextBlock VerticalAlignment="Center" FontSize="14" FontWeight="Normal" >Use in combat</TextBlock>
                                        <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.UseInCombat, Mode=TwoWay}" IsEnabled="True" Margin="43,0,0,0"/>
                                    </StackPanel>
                                    <StackPanel VerticalAlignment="Center"  Orientation="Horizontal" Margin="0,0,0,15">
                                        <TextBlock VerticalAlignment="Center" FontSize="14" FontWeight="Normal" >Requires target</TextBlock>
                                        <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRule.RequiresTarget, Mode=TwoWay}" IsEnabled="True" Margin="38,0,0,0"/>
                                    </StackPanel>
                                    <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Button FontSize="14" Click="AddSelfHealBuffRule_ButtonClick">Add</Button>
                                        <Button Margin="30,0,0,0" FontSize="14" Click="DeleteSelfHealBuffRule_ButtonClick">Delete</Button>
                                    </StackPanel>
                                </StackPanel>
                                </Grid>
                            </Border>
                            <Border BorderThickness="1" BorderBrush="Gray" Grid.Column="3" Margin="3,0,3,0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="14" FontWeight="Bold" Margin="0,20,0,0">Buff Removal</TextBlock>
                                    <StackPanel VerticalAlignment="Center"  HorizontalAlignment="Center" Margin="0,20,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontSize="14" Margin="5" FontWeight="Normal">Remove buff if listed</TextBlock>
                                        </StackPanel>
                                    <Border BorderThickness="2" BorderBrush="Black"  Width="170" Height="30" VerticalAlignment="Center">
                                        <TextBox Width="170" Height="30" FontWeight="Normal" MouseDoubleClick="OpenRemoveBuffSelection_txtBoxMouseDoubleClick" FontSize="12" Text="{Binding SelectedBot.Engine.SelfHealBuffHandler.SelectedRemovalBuffsStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </Border>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,0">
                                        <TextBlock FontWeight="Normal">Self</TextBlock>
                                        <CheckBox IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.RemoveBuffsOnSelf, Mode=TwoWay}" Margin="5,0,0,0"></CheckBox>
                                        <TextBlock FontWeight="Normal">Summon/Pet</TextBlock>
                                        <CheckBox IsChecked="{Binding SelectedBot.Engine.SelfHealBuffHandler.RemoveBuffsOnPet, Mode=TwoWay}" Margin="5,0,0,0"></CheckBox>
                                    </StackPanel>
                                    </StackPanel>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" FontWeight="Bold" Margin="0,0,0,5">Available for Gracia or above</TextBlock>
                            </Grid>
                            </Border>
                        </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Party Heal/Buff" FontWeight="Bold">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border BorderThickness="1" BorderBrush="Gray" Margin="3">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" TextAlignment="Center" Text="State" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" TextAlignment="Center" Text="Name" FontWeight="Bold" />
                                <TextBlock Grid.Column="2" TextAlignment="Center" Text="Settings" FontWeight="Bold" />
                            </Grid>
                            <ListBox Name="PartyHealRulesListBox" ItemsSource="{Binding SelectedBot.Engine.PartyHealBuffHandler.NukesToUse}"  AllowDrop="True" SelectionMode="Single" 
                                             SelectedItem="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule, Mode=TwoWay}" SelectionChanged="PartyHealBuffRulesListBox_SelectionChanged">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50"></ColumnDefinition>
                                                <ColumnDefinition Width="200"></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox HorizontalAlignment="Center" Grid.Column="0" IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></CheckBox>
                                            <TextBlock HorizontalAlignment="Center" Grid.Column="1" Text="{Binding SelfHealBuffName}"></TextBlock>
                                            <TextBlock HorizontalAlignment="Center" Grid.Column="2" Text="{Binding ConditionsString}"></TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </Border>
                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="1" Margin="3">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" >Self HP/MP/CP</TextBlock>
                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                <TextBlock Text="My HP >" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBox Margin="5,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.HealthPercentOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBlock Text="My HP  &lt;" FontSize="16" FontWeight="Normal" VerticalAlignment="Center" Margin="15,0,0,0"/>
                                <TextBox Margin="7,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.HealthPercentBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Row="2" Orientation="Horizontal">
                                <TextBlock Text="My MP >" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBox Margin="2,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.ManaPercentOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBlock Text="My MP &lt;" FontSize="16" FontWeight="Normal" VerticalAlignment="Center" Margin="15,0,0,0"/>
                                <TextBox Margin="8,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.ManaPercentBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Row="3" Orientation="Horizontal">
                                <TextBlock Text="My CP  >" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBox Margin="2,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.CombatPointsPercentOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                                <TextBlock Text="My CP  &lt;" FontSize="16" FontWeight="Normal" VerticalAlignment="Center" Margin="16,0,0,0"/>
                                <TextBox Margin="7,5,0,0" Width="25" VerticalAlignment="Center" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.CombatPointsPercentBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                <TextBlock Text=" %" FontSize="16" FontWeight="Normal" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Row="4"  VerticalAlignment="Center"  Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,10,0,0">
                                <TextBlock VerticalAlignment="Center" FontSize="15" FontWeight="Bold" >Party member conditions</TextBlock>
                            </StackPanel>
                            <StackPanel Grid.Row="5"  VerticalAlignment="Center"  Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock VerticalAlignment="Center" FontSize="15" FontWeight="Normal" Margin="5,0,0,0">Member is dead</TextBlock>
                                <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.PartyMemberIsDead, Mode=TwoWay}" IsEnabled="True" Margin="13,0,0,0"/>
                            </StackPanel>
                            <Button Grid.Row="6" FontSize="16" Click="OpenAdditionalPartyConditions_ButtonClick">Additional Conditions</Button>
                        </Grid>
                    </Border>
                    <Grid Grid.ColumnSpan="2" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border BorderThickness="1" BorderBrush="Gray"  Grid.Column="0" Grid.ColumnSpan="3">
                            <Grid Margin="20,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.ColumnSpan="2" Margin="7,0,0,0">
                                    <StackPanel Orientation="Horizontal" Margin="5"  VerticalAlignment="Top">
                                        <TextBlock VerticalAlignment="Center">Type</TextBlock>
                                        <ComboBox Margin="5,0,0,0"  VerticalAlignment="Center" SelectedIndex="{Binding SelectedBot.Engine.PartyHealBuffHandler.NukeTypeToAdd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="85" >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <DockPanel>
                                                        <TextBlock Text="{Binding SkillName}" HorizontalAlignment="Center"></TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                            <ComboBoxItem>Skill</ComboBoxItem>
                                            <ComboBoxItem>Item</ComboBoxItem>
                                            <ComboBoxItem>Pet Skill</ComboBoxItem>
                                        </ComboBox>
                                        <TextBlock Margin="20,0,0,0"  VerticalAlignment="Center">Name</TextBlock>
                                        <ComboBox Name="partyHealBuffBox" SelectedValuePath="SkillName" DisplayMemberPath="SkillName"  SelectionChanged="PartyHealBuffBox_OnSelectionChanged"
                                                  IsTextSearchEnabled="True" Margin="5,0,0,0" Text="Type" VerticalAlignment="Center" Width="180"
                                                  ItemsSource="{Binding SelectedBot.Engine.PartyHealBuffHandler.NukesToAdd}"/>
                                    </StackPanel>
                                    <StackPanel VerticalAlignment="Bottom">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontWeight="Normal" FontSize="13" VerticalAlignment="Center">Member is missing (de)buff</TextBlock>
                                            <CheckBox Margin="2,0,0,0" IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.UseIfBuffIsMissing}"/>
                                            <TextBlock FontWeight="Normal" FontSize="13" VerticalAlignment="Center" Margin="5,0,0,0">Member is having (de)buff</TextBlock>
                                            <CheckBox Margin="2,0,0,0" IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.UseIfBuffIsPresent}"/>
                                        </StackPanel>
                                        <Border Margin="0,5,0,0" BorderThickness="2" BorderBrush="Black"  Width="360" Height="22" VerticalAlignment="Center" HorizontalAlignment="Left">
                                            <TextBox Width="360" Height="30" FontWeight="Normal" MouseDoubleClick="OpenBuffSelection_txtBoxMouseDoubleClick" FontSize="12" TextAlignment="Center"
                                                     Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.SelectedBuffsStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </Border>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                                            <CheckBox IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.TimerCheckActivated, Mode=TwoWay}"></CheckBox>
                                            <TextBlock HorizontalAlignment="Left" FontSize="14" FontWeight="Normal" >and/or time left is</TextBlock>
                                            <ComboBox MinHeight="20" Height="15" Width="62" SelectedIndex="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.TimerComparisonType, Mode=TwoWay}"  FontSize="12" Margin="10,0,0,0">
                                                <ComboBoxItem>Less</ComboBoxItem>
                                                <ComboBoxItem>More</ComboBoxItem>
                                            </ComboBox>
                                            <TextBlock FontWeight="Normal" Margin="3,3,0,0" FontSize="14">than</TextBlock>
                                            <TextBox MinHeight="20" Height="15" Margin="5,0,0,0" Width="20" Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.TimerSeconds, Mode=TwoWay}" 
                                                     TextChanged="OnlyDigitsValidationTB_TextChanged" KeyDown="CommitChanges_OnKeyDown" FontSize="10"/>
                                            <TextBlock FontWeight="Normal" Margin="3,3,0,0" FontSize="14">seconds.</TextBlock>
                                        </StackPanel>
                                    </Grid>
                                    <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Margin="0,10,0,0">
                                        <CheckBox  IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.SkillLevelComparisonActivated, Mode=TwoWay}"></CheckBox>
                                        <TextBlock HorizontalAlignment="Left" FontSize="14" FontWeight="Normal" >and/or skill level is</TextBlock>
                                        <ComboBox MinHeight="20" Height="15" Width="62" SelectedIndex="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.SkillLevelComparisonType, Mode=TwoWay}" FontSize="12" Margin="5,0,0,0">
                                            <ComboBoxItem>Less</ComboBoxItem>
                                            <ComboBoxItem>More</ComboBoxItem>
                                            <ComboBoxItem>Equal</ComboBoxItem>
                                        </ComboBox>
                                        <TextBlock FontWeight="Normal" Margin="3,3,0,0" FontSize="14">than/to</TextBlock>
                                        <TextBox MinHeight="20" Height="15" Margin="5,0,0,0" Width="20" Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.SkillLevelRequired, Mode=TwoWay}" 
                                                     TextChanged="OnlyDigitsValidationTB_TextChanged" KeyDown="CommitChanges_OnKeyDown" FontSize="10"/>
                                        <TextBlock FontWeight="Normal" Margin="3,3,0,0" FontSize="14">.</TextBlock>
                                    </StackPanel>
                                </StackPanel>
                                <Grid Grid.Row="1" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                </Grid>
                            </Grid>
                        </Border>
                        <Border BorderThickness="0" BorderBrush="Gray" Margin="3,0,3,0" Grid.Column="2">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="15">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock FontWeight="Bold" Margin="0,5,10,0">Interval</TextBlock>
                                        <TextBox Width="50" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                                 Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.Interval, FallbackValue=0.50, Mode=TwoWay,StringFormat='{}{0:F2}'}"/>
                                        <TextBlock Margin="0,5,10,0">s</TextBlock>
                                    </StackPanel>
                                    <StackPanel VerticalAlignment="Center"  Orientation="Horizontal" Margin="0,15,0,15">
                                        <TextBlock VerticalAlignment="Center" FontSize="14" FontWeight="Normal" >Use in combat</TextBlock>
                                        <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.UseInCombat, Mode=TwoWay}" IsEnabled="True" Margin="43,0,0,0"/>
                                    </StackPanel>
                                    <StackPanel VerticalAlignment="Center"  Orientation="Horizontal" Margin="0,0,0,15">
                                        <TextBlock VerticalAlignment="Center" FontSize="14" FontWeight="Normal" >Requires target</TextBlock>
                                        <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.RequiresTarget, Mode=TwoWay}" IsEnabled="True" Margin="38,0,0,0"/>
                                    </StackPanel>
                                    <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Button FontSize="14" Click="AddPartyHealBuffRule_ButtonClick">Add</Button>
                                        <Button Margin="30,0,0,0" FontSize="14" Click="DeletePartyHealBuffRule_ButtonClick">Delete</Button>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border BorderThickness="1" BorderBrush="Gray" Grid.Column="3" Margin="3,0,3,0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="14" FontWeight="Bold" Margin="0,20,0,0"></TextBlock>
                                <StackPanel VerticalAlignment="Center"  HorizontalAlignment="Center">
                                    <TextBlock HorizontalAlignment="Center" FontSize="14" Margin="0,0,0,5"> Use on</TextBlock>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <TextBlock FontWeight="Normal">All Players</TextBlock>
                                        <CheckBox IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.UseOnPlayer, Mode=TwoWay}" Margin="5,0,0,0"></CheckBox>
                                        <TextBlock FontWeight="Normal">All Summon/Pet</TextBlock>
                                        <CheckBox IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.SelectedRule.UseOnSummonPet, Mode=TwoWay}" Margin="5,0,0,0"></CheckBox>
                                    </StackPanel>
                                    <Border BorderThickness="0" BorderBrush="Black"  Width="170" Height="30" VerticalAlignment="Center">
                                        <Button Click="OpenPartyTargetsSelect_ButtonClick" FontSize="14">Target List</Button>
                                    </Border>
                                    <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                                        <CheckBox IsChecked="{Binding SelectedBot.Engine.PartyHealBuffHandler.OutOfParty, Mode=TwoWay}"></CheckBox>
                                        <TextBlock FontWeight="Normal">Leave party after</TextBlock>
                                        <TextBox Text="{Binding SelectedBot.Engine.PartyHealBuffHandler.OutOfPartyTimer, Mode=TwoWay}"  Margin="5,-5,0,0" MinHeight="20" Height="15" FontSize="10"></TextBox>
                                        <TextBlock FontWeight="Normal" Margin="5,0,0,0">sec.</TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Attack Settings" FontWeight="Bold">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="4*"/>
                    </Grid.ColumnDefinitions>
                    <Border BorderThickness="1" BorderBrush="Gray" Margin="3">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" FontSize="16" FontWeight="Bold" >Character Settings</TextBlock>
                            <StackPanel Grid.Row="0" VerticalAlignment="Center" Margin="10,35,10,0" Orientation="Horizontal" >
                                <TextBlock VerticalAlignment="Center" FontSize="14" FontWeight="Normal" >Auto Attack</TextBlock>
                                <CheckBox HorizontalContentAlignment="Right" IsChecked="{Binding SelectedBot.Engine.AttackHandler.UseMeleeAttack, Mode=TwoWay}" IsEnabled="True" Margin="90,0,0,0"/>
                            </StackPanel>
                            <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10,0,17,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock HorizontalAlignment="Left" FontSize="14" FontWeight="Normal" >Range</TextBlock>

                                    <CheckBox Grid.Column="1" HorizontalAlignment="Right" IsChecked="{Binding SelectedBot.Engine.AttackHandler.UseDefaultAttackRangeCalculation, Mode=TwoWay}" FontWeight="Normal">Default</CheckBox>
                                </Grid>
                                <StackPanel Orientation="Horizontal" Margin="0,25,0,0">
                                    <TextBlock Margin="0,5,0,0" FontWeight="Normal">Min</TextBlock>
                                    <TextBox Width="30" Margin="5,0,20,5" IsEnabled="{Binding SelectedBot.Engine.AttackHandler.UseDefaultAttackRangeCalculation, Converter={StaticResource inverseBoolConverter}}" 
                                             FontStyle="Normal" Text="{Binding SelectedBot.Engine.AttackHandler.MinimumAttackDistance, Mode=TwoWay, FallbackValue=0}" KeyDown="CommitChanges_OnKeyDown" />
                                    <TextBlock Margin="0,5,0,0" FontWeight="Normal">Max</TextBlock>
                                    <TextBox Width="40" Margin="5,0,10,5" IsEnabled="{Binding SelectedBot.Engine.AttackHandler.UseDefaultAttackRangeCalculation, Converter={StaticResource inverseBoolConverter}}" 
                                             FontStyle="Normal" Text="{Binding SelectedBot.Engine.AttackHandler.MaximumAttackDistance, Mode=TwoWay, FallbackValue=50}" KeyDown="CommitChanges_OnKeyDown" />
                                </StackPanel>
                            </StackPanel>
                            <Grid Grid.Row="2" Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="14" FontWeight="Normal" >Pet Attack</TextBlock>
                                <CheckBox IsEnabled="False" Grid.Column="1" Margin="0,0,42,0" HorizontalAlignment="Right"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="1" Margin="3">
                        <Grid Margin="5,0,0,10">
                            <TextBlock HorizontalAlignment="Center" FontSize="16" FontWeight="Bold" Margin="0,10,0,0">Combat Target Settings</TextBlock>
                            <StackPanel VerticalAlignment="Center" Margin="10">
                                <StackPanel Orientation="Horizontal">
                                    <RadioButton GroupName="CombatTargetType" Content="Turned off" IsChecked="{Binding SelectedBot.Engine.CombatTargetType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:CombatTargetType.Off}, FallbackValue=True}" FontSize="14" FontWeight="Normal" Margin="0,15,0,0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <RadioButton GroupName="CombatTargetType" IsChecked="{Binding SelectedBot.Engine.CombatTargetType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:CombatTargetType.AroundChar}}" Content="Around character " FontSize="14" FontWeight="Normal" Margin="0,15,0,0" />
                                </StackPanel>
                                <RadioButton GroupName="CombatTargetType" Content="Around point " IsChecked="{Binding SelectedBot.Engine.CombatTargetType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:CombatTargetType.AroundPoint}}" Margin="0,15,0,0" FontSize="14" FontWeight="Normal"/>
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                    <TextBlock VerticalAlignment="Bottom" FontSize="14" Margin="5,0,0,0" FontWeight="Normal">X</TextBlock>
                                    <TextBox VerticalAlignment="Bottom" Width="45" Height="20" MinHeight="5"  KeyDown="CommitChanges_OnKeyDown" Margin="5,0,0,0" FontSize="9" FontWeight="Normal" Text="{Binding SelectedBot.Engine.PointX, Mode=TwoWay}"/>
                                    <TextBlock VerticalAlignment="Bottom" FontSize="14" Margin="5,0,0,0" FontWeight="Normal">Y</TextBlock>
                                    <TextBox VerticalAlignment="Bottom" Width="45" Height="20" MinHeight="5"  KeyDown="CommitChanges_OnKeyDown" Margin="5,0,0,0" FontSize="9" FontWeight="Normal"  Text="{Binding SelectedBot.Engine.PointY, Mode=TwoWay}"/>
                                    <TextBlock VerticalAlignment="Bottom" FontSize="14" Margin="5,0,0,0" FontWeight="Normal">Z</TextBlock>
                                    <TextBox VerticalAlignment="Bottom" Width="45" Height="20" MinHeight="5"  KeyDown="CommitChanges_OnKeyDown" Margin="5,0,0,0" FontSize="9" FontWeight="Normal"  Text="{Binding SelectedBot.Engine.PointZ, Mode=TwoWay}"/>
                                    <Button Height="22" MinHeight="5"  Margin="5,2,0,0" FontSize="9" Click="GetCurrentLoc_ButtonClick" >Get Loc</Button>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,25,0">
                                    <TextBlock Margin="0,2,0,0" FontSize="14" FontWeight="Normal">Range</TextBlock>
                                    <TextBox Margin="10,0,0,-5" Width="40" Text="{Binding SelectedBot.Engine.Range, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  KeyDown="CommitChanges_OnKeyDown"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,9,0,0">
                                    <TextBlock Margin="0,2,0,0" FontSize="14" FontWeight="Normal">Move to center if no monsters</TextBlock>
                                    <CheckBox Margin="5,0,0,-5" IsChecked="{Binding SelectedBot.Engine.MoveToCenterIfNoMobs, Mode=TwoWay}"></CheckBox>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Column="1" Margin="3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1.5*"/>
                                <RowDefinition Height="3*"/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" FontSize="16" FontWeight="Bold" >Assist Settings</TextBlock>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,35,0,0">
                                <TextBlock VerticalAlignment="Center" FontSize="15">Assist</TextBlock>
                                <CheckBox Margin="30,0,0,0" IsChecked="{Binding SelectedBot.Engine.AssistHandler.AssistActivated, Mode=TwoWay}"/>
                            </StackPanel>
                            <StackPanel Grid.Row="1" >
                                <Border BorderThickness="2" BorderBrush="Black" Grid.Row="1" Width="300" Height="30" VerticalAlignment="Top" HorizontalAlignment="Center">
                                    <TextBox Width="300" Height="30" FontWeight="Normal" MouseDoubleClick="OpenPlayerAssistFilter_txtBoxMouseDoubleClick" 
                                             Text="{Binding SelectedBot.Engine.AssistHandler.SelectedPlayersStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Border>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <StackPanel>
                                        <RadioButton GroupName="AssistType" Content="Attack instantly" IsChecked="{Binding SelectedBot.Engine.AssistHandler.AssistType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:AssistType.AttackInstant}, FallbackValue=True}"  FontSize="14" FontWeight="Normal" Margin="0,15,0,0" />
                                        <RadioButton GroupName="AssistType" Content="Wait for main assist attack." IsChecked="{Binding SelectedBot.Engine.AssistHandler.AssistType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:AssistType.WaitForFirstAttack}}" Margin="0,15,0,0" FontSize="14" FontWeight="Normal"/>
                                    </StackPanel>
                                    <StackPanel Margin="10,0,0,0">
                                        <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                                            <RadioButton GroupName="AssistType" Content="Custom delay  " IsChecked="{Binding SelectedBot.Engine.AssistHandler.AssistType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:AssistType.WaitCustomDelay}}" FontSize="14" FontWeight="Normal"  />
                                            <TextBox Width="25" IsEnabled="True" FontStyle="Normal" KeyDown="CommitChanges_OnKeyDown"  Text="{Binding SelectedBot.Engine.AssistHandler.CustomDelay, Mode=TwoWay, FallbackValue=0}"></TextBox>
                                            <TextBlock Margin="0,7,0,0" Text=" sec." FontSize="14" FontWeight="Normal"></TextBlock>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                            <RadioButton GroupName="AssistType" Content="Random delay  " IsChecked="{Binding SelectedBot.Engine.AssistHandler.AssistType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:AssistType.WaitRandomDelay}}" FontSize="14" FontWeight="Normal"  />
                                            <TextBox Width="25" IsEnabled="True" KeyDown="CommitChanges_OnKeyDown"  FontStyle="Normal" Text="{Binding SelectedBot.Engine.AssistHandler.RandomDelayMin, Mode=TwoWay, FallbackValue=0}"/>
                                            <TextBlock Text=" - " FontSize="16"></TextBlock>
                                            <TextBox Width="25" IsEnabled="True" KeyDown="CommitChanges_OnKeyDown"  FontStyle="Normal" Text="{Binding SelectedBot.Engine.AssistHandler.RandomDelayMax, Mode=TwoWay, FallbackValue=2}"/>
                                            <TextBlock Margin="0,7,0,0" Text=" sec." FontSize="14" FontWeight="Normal"></TextBlock>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="1" Grid.Column="1" Margin="3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" FontSize="18" FontWeight="Bold" >Advanced Settings</TextBlock>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem Header="Character settings"  FontWeight="Bold" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border BorderThickness="1" BorderBrush="Gray" Margin="3">
                        <Grid Margin="3">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" >Follow Settings</TextBlock>
                            <StackPanel HorizontalAlignment="Center" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Top">
                                <TextBlock FontSize="14" >Follow</TextBlock>
                                <CheckBox IsChecked="{Binding SelectedBot.Engine.FollowHandler.FollowActivated, Mode=TwoWay}" Margin="10,3,0,0"></CheckBox>
                            </StackPanel>
                            <StackPanel Grid.Row="1" VerticalAlignment="Center">
                                <RadioButton GroupName="FollowType" Content="Party Leader" IsChecked="{Binding SelectedBot.Engine.FollowHandler.FollowType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:FollowType.PartyLeader}, FallbackValue=True}" FontSize="14" FontWeight="Normal" Margin="0,15,0,0" />
                                <RadioButton GroupName="FollowType" Content="Player List" IsChecked="{Binding SelectedBot.Engine.FollowHandler.FollowType, Converter={StaticResource radioButtonToEnumConverter}, ConverterParameter={x:Static src:FollowType.PlayerList}}" FontSize="14" FontWeight="Normal" Margin="0,15,0,0" />
                            </StackPanel>
                            <StackPanel Grid.Row="2">
                                <Border BorderThickness="2" BorderBrush="Black"  Width="300" Height="30" VerticalAlignment="Top" Margin="-30,0,0,0">
                                    <TextBox Width="300" Height="30" FontWeight="Normal" FontSize="14" MouseDoubleClick="OpenPlayerFollowSelection_txtBoxMouseDoubleClick"
                                             Text="{Binding SelectedBot.Engine.FollowHandler.SelectedPlayersStr, Mode=TwoWay}"/>
                                </Border>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="0,10,0,0">
                                    <TextBlock Margin="0,5,0,0" FontWeight="Normal">Min</TextBlock>
                                    <TextBox Width="30" Margin="5,0,20,5" FontStyle="Normal" Text="{Binding SelectedBot.Engine.FollowHandler.MinFollowDistance, Mode=TwoWay, FallbackValue=100, UpdateSourceTrigger=PropertyChanged}"
                                             KeyDown="CommitChanges_OnKeyDown" />
                                    <TextBlock Margin="0,5,0,0" FontWeight="Normal">Max</TextBlock>
                                    <TextBox Width="40" Margin="5,0,10,5" FontStyle="Normal" TextAlignment="Center" Text="{Binding SelectedBot.Engine.FollowHandler.MaxFollowDistance, 
                                        Mode=TwoWay, FallbackValue=150}" 
                                             KeyDown="CommitChanges_OnKeyDown" />
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                        
                    </Border>
                    
                    <Border BorderThickness="1" BorderBrush="Gray" Margin="3" Grid.Column="1">
                        <Grid Margin="3" IsEnabled="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="65"/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" >Party Settings</TextBlock>
                            <StackPanel HorizontalAlignment="Center" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Top">
                                <TextBlock FontSize="14" >Invite</TextBlock>
                                <CheckBox  Margin="10,0,10,3" IsChecked="{Binding SelectedBot.Engine.DialogHandler.InviteActivated, Mode=TwoWay}" ></CheckBox>
                                <ComboBox MinHeight="20" Height="15"  Width="182" SelectedIndex="{Binding SelectedBot.Engine.DialogHandler.PartyTypeToCreate, Mode=TwoWay, FallbackValue=0}"  FontSize="12" Margin="10,0,0,3">
                                    <ComboBoxItem>Finders Keepers</ComboBoxItem>
                                    <ComboBoxItem>Random</ComboBoxItem>
                                    <ComboBoxItem>Random Including Spoil</ComboBoxItem>
                                    <ComboBoxItem>By Turn</ComboBoxItem>
                                    <ComboBoxItem>By Turn Including Spoil</ComboBoxItem>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Grid.Row="1" VerticalAlignment="Center" >
                                <Border BorderThickness="2" BorderBrush="Black" Grid.Row="1"  Width="320" Height="30" Margin="-30,10,0,0">
                                    <TextBox Width="320" Height="30" FontWeight="Normal" FontSize="14" FontStyle="Italic"   MouseDoubleClick="OpenPlayerInviteSelection_txtBoxMouseDoubleClick"
                                             Text="{Binding SelectedBot.Engine.DialogHandler.PlayersToInviteStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Border>
                            </StackPanel>

                            <StackPanel HorizontalAlignment="Center" Grid.Row="3" Orientation="Horizontal" VerticalAlignment="Top">
                                <TextBlock FontSize="14" >Accept Party</TextBlock>
                                <CheckBox Margin="10,3,0,0" IsChecked="{Binding SelectedBot.Engine.DialogHandler.AcceptPartyActivated, Mode=TwoWay}" ></CheckBox>
                            </StackPanel>

                            <StackPanel Grid.Row="3" VerticalAlignment="Center" >
                                <Border BorderThickness="2" BorderBrush="Black" Grid.Row="1"  Width="320" Height="30" Margin="-30,-5,0,0">
                                    <TextBox Width="320" Height="30" FontWeight="Normal" FontSize="14" FontStyle="Italic" MouseDoubleClick="OpenPlayerAcceptPartyFromSelection_txtBoxMouseDoubleClick"
                                             Text="{Binding SelectedBot.Engine.DialogHandler.RefusePartyFromStrangers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Border>
                            </StackPanel>

                            <StackPanel Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="0,20,0,0">
                                <CheckBox Margin="0,-7,5,0" IsChecked="{Binding SelectedBot.Engine.DialogHandler.AcceptPartyActivated, Mode=TwoWay}" ></CheckBox>
                                <TextBlock FontSize="14" FontWeight="Normal" >Refuse party from strangers after </TextBlock>
                                <TextBox Width="20" TextAlignment="Center" IsEnabled="True" MinHeight="20" Height="20" KeyDown="CommitChanges_OnKeyDown" Margin="5,-3,0,0" FontStyle="Normal" Text="{Binding SelectedBot.Engine.DialogHandler.RefusePartyDelayMin, Mode=TwoWay, FallbackValue=0}" FontSize="10"/>
                                <TextBlock Text=" - " FontSize="16"></TextBlock>
                                <TextBox Width="20" TextAlignment="Center" IsEnabled="True" MinHeight="20" Height="20" KeyDown="CommitChanges_OnKeyDown" Margin="5,-3,0,0" FontStyle="Normal" Text="{Binding SelectedBot.Engine.DialogHandler.RefusePartyDelayMax, Mode=TwoWay, FallbackValue=5}" FontSize="10"/>
                                <TextBlock Text=" sec." FontSize="14" FontWeight="Normal"></TextBlock>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Gray" Margin="3" Grid.Row="1" Grid.Column="1">
                        <Grid Margin="3" IsEnabled="True">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="2*"/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" >Resurrection Settings</TextBlock>
                            <StackPanel HorizontalAlignment="Center" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Top">
                                <TextBlock FontSize="14" >Accept resurrection</TextBlock>
                                <CheckBox IsEnabled="True" Margin="10,3,0,0" IsChecked="{Binding SelectedBot.Engine.DialogHandler.AcceptResurrection, Mode=TwoWay}" ></CheckBox>
                            </StackPanel>

                            <StackPanel Grid.Row="1" VerticalAlignment="Center" >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock  VerticalAlignment="Bottom" FontWeight="Normal" FontSize="14" Margin="6,0,0,5"> Everyone</TextBlock>
                                    <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.DialogHandler.AcceptResurrectionFromEveryone, Mode=TwoWay}" IsEnabled="False"></CheckBox>
                                    <TextBlock  VerticalAlignment="Bottom" FontWeight="Normal" FontSize="14" Margin="6,0,0,5"> Party Members</TextBlock>
                                    <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.DialogHandler.AcceptResurrectionFromParty, Mode=TwoWay}" IsEnabled="False"></CheckBox>
                                    <TextBlock  VerticalAlignment="Bottom" FontWeight="Normal" FontSize="14" Margin="6,0,0,5"> My own chars</TextBlock>
                                    <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.DialogHandler.AcceptResurrectionFromOwnChars, Mode=TwoWay}" IsEnabled="False"></CheckBox>
                                    <TextBlock  VerticalAlignment="Bottom" FontWeight="Normal" FontSize="14" Margin="6,0,0,5"> List</TextBlock>
                                    <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.DialogHandler.AcceptResurrectionFromList, Mode=TwoWay}" IsEnabled="False"></CheckBox>
                                </StackPanel>
                                <Border BorderThickness="2" BorderBrush="Black" Grid.Row="1"  Width="380" Height="30" Margin="0,5,0,0">
                                    <TextBox Width="380" Height="30" FontWeight="Normal" TextAlignment="Center" FontSize="14" IsEnabled="False" FontStyle="Italic" MouseDoubleClick="OpenPlayerAcceptResFromSelection_txtBoxMouseDoubleClick"
                                             Text="{Binding SelectedBot.Engine.DialogHandler.PlayersToAcceptRessStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Border>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Gray" Margin="3" Grid.Row="1">
                        <Grid Margin="3" IsEnabled="False">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" >Protection Settings</TextBlock>
                            <StackPanel HorizontalAlignment="Center" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Top">
                                <TextBlock FontSize="14" >Guard Mode</TextBlock>
                                <CheckBox Margin="10,3,0,0"></CheckBox>
                            </StackPanel>
                            
                            <StackPanel HorizontalAlignment="Center" Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock FontSize="14" FontWeight="Normal" >Protect Pets/Summons</TextBlock>
                                <CheckBox Margin="10,3,0,0"></CheckBox>
                            </StackPanel>
                            <StackPanel Grid.Row="1" VerticalAlignment="Bottom" >
                                <TextBlock  VerticalAlignment="Bottom" FontWeight="Bold" FontSize="14" Margin="6,0,0,5"> Player List</TextBlock>
                                <Border BorderThickness="2" BorderBrush="Black" Grid.Row="1"  Width="300" Height="30" Margin="-30,0,0,0">
                                    <TextBox Width="300" Height="30" FontWeight="Normal" FontSize="14" FontStyle="Italic"></TextBox>
                                </Border>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem Header="Drop" FontWeight="Bold" IsEnabled="True">
                <Border BorderThickness="1" BorderBrush="Black" Margin="5,0,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="2*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border BorderThickness="0" BorderBrush="Black" >
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10">
                                <TextBlock VerticalAlignment="Center" FontSize="14" HorizontalAlignment="Center">Pick up</TextBlock>
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <CheckBox  IsChecked="{Binding SelectedBot.Engine.PickupHandler.PickupAll, Mode=TwoWay}"/>
                                    <TextBlock FontWeight="Normal" Text="Pick up all" FontSize="14" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <CheckBox IsChecked="{Binding SelectedBot.Engine.PickupHandler.PickupInclusive, Mode=TwoWay}"/>
                                    <TextBlock FontWeight="Normal" Text="Pick up only listed items" FontSize="14" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <CheckBox IsChecked="{Binding SelectedBot.Engine.PickupHandler.PickupExclusive, Mode=TwoWay}"/>
                                    <TextBlock FontWeight="Normal" Text="Pick up all except listed items" FontSize="14" />
                                </StackPanel>
                            </StackPanel>
                        </Border>

                        <Border BorderThickness="1" BorderBrush="Black" Margin="2" Grid.Row="1" Grid.Column="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="15"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" TextAlignment="Center" Text="State" FontWeight="Bold" />
                                    <TextBlock Grid.Column="1" TextAlignment="Center" Text="Name" FontWeight="Bold" />
                                    <TextBlock Grid.Column="2" TextAlignment="Center" Text="Settings" FontWeight="Bold" />
                                </Grid>

                                <ListBox Grid.Row="1" Name="PickUpRulesListBox" ItemsSource="{Binding SelectedBot.Engine.PickupHandler.RulesInUse}"  AllowDrop="True" SelectionMode="Single" 
                                             SelectedItem="{Binding SelectedBot.Engine.PickupHandler.SelectedPickupRule, Mode=TwoWay}" >
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="50"></ColumnDefinition>
                                                    <ColumnDefinition Width="200"></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <CheckBox HorizontalAlignment="Center" Grid.Column="0" IsChecked="{Binding Enable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></CheckBox>
                                                <TextBlock HorizontalAlignment="Center" Grid.Column="1" Text="{Binding ItemName}"></TextBlock>
                                                <TextBlock HorizontalAlignment="Center" Grid.Column="2" Text="{Binding PickupConditions}"></TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                                <StackPanel Grid.Row="2" Orientation="Horizontal">
                                        <Border BorderThickness="1" BorderBrush="Black" Margin="2" Grid.Row="2" Grid.Column="0">
                                            <TextBox Width="200" TextAlignment="Center" FontSize="10" Margin="0,-2,0,0" Padding="0" Text="{Binding SelectedBot.Engine.PickupHandler.ItemFilter, UpdateSourceTrigger=PropertyChanged}"
                                                     KeyDown="TriggerItemSearchOnEnterDown_KeyDown"/>
                                        </Border>
                                        <Button Content="Search" Width="80" MinHeight="5" FontSize="10" Padding="0" Margin="2" Click="SearchItemsPickupAdd_ButtonClick"/>
                                        <Button Content="Inventory" Width="80" MinHeight="5"  FontSize="10" Padding="0" Margin="2" IsEnabled="False"/>
                                        <Button Content="Drop around" Width="80" MinHeight="5"  FontSize="10" Padding="0" Margin="2" IsEnabled="False"/>
                                        <Button Content="Remove" Width="68" MinHeight="5"  FontSize="10" Padding="0" Margin="2" Click="RemovePickupRule_ButtonClick"/>
                                    </StackPanel>
                                
                            </Grid>
                        </Border>
                        <Border BorderThickness="1" BorderBrush="Black" Margin="2" Grid.Row="2" Grid.Column="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16">General</TextBlock>
                                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="Range" FontWeight="Normal" FontSize="14"/>
                                    <TextBox Width="40" Margin="5,-2,0,0" FontWeight="Normal" Text="{Binding SelectedBot.Engine.PickupHandler.Range, Mode=TwoWay}" 
                                             TextChanged="OnlyDigitsValidationTB_TextChanged"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="Pick up only mine" FontWeight="Normal" FontSize="14"/>
                                    <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.PickupHandler.PickupMine, Mode=TwoWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="Dont pickup herbs" FontWeight="Normal" FontSize="14"/>
                                    <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.PickupHandler.DontPickupHerbs, Mode=TwoWay}" IsEnabled="False"/>
                                </StackPanel>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3">Conditions</TextBlock>
                                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="My HP  &lt;" FontWeight="Normal" FontSize="14"/>
                                    <TextBox Width="25" Margin="5,-2,0,0" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PickupHandler.SelectedPickupRule.HealthBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                    <TextBlock Text=" %" FontWeight="Normal" FontSize="14"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="My MP &lt;" FontWeight="Normal" FontSize="14"/>
                                    <TextBox Width="25" Margin="5,-2,0,0" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PickupHandler.SelectedPickupRule.ManaBelow, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"/>
                                    <TextBlock Text=" %" FontWeight="Normal" FontSize="14"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="My HP >" FontWeight="Normal" FontSize="14"/>
                                    <TextBox Width="25" Margin="5,-2,0,0" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PickupHandler.SelectedPickupRule.HealthOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"></TextBox>
                                    <TextBlock Text=" %" FontWeight="Normal" FontSize="14"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="My MP >" FontWeight="Normal" FontSize="14"/>
                                    <TextBox Width="25" Margin="5,-2,0,0" FontWeight="Normal" KeyDown="CommitChanges_OnKeyDown"
                                         Text="{Binding SelectedBot.Engine.PickupHandler.SelectedPickupRule.ManaOver, Mode=TwoWay}" TextChanged="TwoDigitValidation_TbTextChange"></TextBox>
                                    <TextBlock Text=" %" FontWeight="Normal" FontSize="14"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="Dont pickup if load >" FontWeight="Normal" FontSize="14"/>
                                    <TextBox Margin="5,0,0,0" Width="25" IsEnabled="False"/>
                                    <TextBlock Text=" %" FontWeight="Normal" FontSize="14"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="Quantity >" FontWeight="Normal" FontSize="14"/>
                                    <TextBox Width="35" Margin="5,-2,0,0" FontWeight="Normal" Text="{Binding SelectedBot.Engine.PickupHandler.SelectedPickupRule.QuantityMinimum, Mode=TwoWay}" 
                                             TextChanged="OnlyDigitsValidationTB_TextChanged"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="Quantity &lt;" FontWeight="Normal" FontSize="14"/>
                                    <TextBox Width="35" Margin="5,-2,0,0" FontWeight="Normal" Text="{Binding SelectedBot.Engine.PickupHandler.SelectedPickupRule.QuantityMaximum, Mode=TwoWay}" 
                                             TextChanged="OnlyDigitsValidationTB_TextChanged"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    
                </Border>
            </TabItem>
            <TabItem Header="Target Filter" FontWeight="Bold">
                <Border BorderThickness="1" BorderBrush="Black" Margin="5,0,0,0">
                <StackPanel Width="250" Height="300" VerticalAlignment="Bottom">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,4">
                        <TextBlock>Ignore the following monsters</TextBlock>
                        <CheckBox Margin="5,0,0,0" IsChecked="{Binding SelectedBot.Engine.IgnoreMonsters, Mode=TwoWay}"></CheckBox>
                    </StackPanel>
                    <Border BorderThickness="2" BorderBrush="Black" Grid.Row="2" Width="250" Height="27" VerticalAlignment="Center" Margin="0,0,0,100">
                            <TextBox Width="250" Height="27" FontWeight="Normal" MouseDoubleClick="OpenTargetFilterIgnoreMonsterFilter_txtBoxMouseDoubleClick" FontSize="12" Text="{Binding SelectedBot.Engine.MonsterFilterStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Border>
                    <Button Margin="0,125,0,0" Background="Transparent" Opacity="0" Click="DebugWindowMonstersAround_Click"></Button>
                    </StackPanel>
                </Border>
            </TabItem>
            <TabItem Header="Events" IsEnabled="False" FontWeight="Bold">
            </TabItem>
        </TabControl>
    </Grid>
</controls:MetroWindow>
